buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.0.8'
//        classpath group: 'org.robovm', name: 'robovm-gradle-plugin', version: project.roboVMGradleVersion
    }
}

apply plugin: 'org.javafxports.jfxmobile'
apply plugin: 'pmd'
apply plugin: 'jacoco'
//apply plugin: 'robovm'

repositories {
    jcenter()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
//    mavenCentral()
//    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

mainClassName = 'capstone.mobile.App'

dependencies {
    compile 'com.gluonhq:charm:3.0.0', 'com.gluonhq:maps:1.0.0'

    androidRuntime 'com.gluonhq:charm-android:3.0.0'
    iosRuntime 'com.gluonhq:charm-ios:3.0.0'
    desktopRuntime 'com.gluonhq:charm-desktop:3.0.0'

    testCompile 'junit:junit:4.12'

//    compile group: 'org.robovm', name: 'robovm-rt', version: project.roboVMVersion
//    compile group: 'org.robovm', name: 'robovm-cocoatouch', version: project.roboVMVersion
}

//robovm {
//    robovm.device.name = 'iPhone-5s'
//    robovm.sdk.version = '9.0'
//}

jfxmobile {
    android {
        manifest = 'src/android/AndroidManifest.xml'
    }
    ios {
        infoPList = file('src/ios/Default-Info.plist')
        forceLinkClasses = [
                'com.gluonhq.**.*',
                'io.datafx.**.*',
                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'org.glassfish.json.**.*'
        ]
    }
}

pmd {
    ignoreFailures = true
    ruleSets = ["java-basic",
                "java-braces",
                "java-naming",
                "java-codesize",
                "java-optimizations",
                "java-unusedcode",
                "java-design",
                "java-junit",
                "java-controversial"]
}

jacoco {
    reportsDir = file("$buildDir/jacocoReport")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

sourceSets {
    test {
        java {
            srcDirs = ["src/tests"]
        }
    }
}

retrolambda {
    jdk System.getenv("JAVA_HOME")
    if (System.getenv("JAVA7_HOME")) {
        oldJdk System.getenv("JAVA7_HOME")
    } else {
        oldJdk "/usr/lib/jvm/java-7-oracle/jre"
    }
}