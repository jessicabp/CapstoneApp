buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.0.9'
    }
}

apply plugin: 'org.javafxports.jfxmobile'
apply plugin: 'pmd'
apply plugin: 'jacoco'

repositories {
    jcenter()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
    maven {
        url "http://www.evosuite.org/m2"
    }
}

mainClassName = 'capstone.mobile.App'

dependencies {
    compile 'com.gluonhq:charm:4.0.1'
    compile group: 'com.gluonhq', name: 'charm-down-plugin-vibration', version: '3.0.0'
    compile group: 'com.gluonhq', name: 'charm-down-plugin-vibration-android', version: '3.0.0'


    testCompile group: 'com.gluonhq', name: 'charm-down-desktop', version: '2.0.1'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'

    androidRuntime 'com.gluonhq:charm-android:3.0.0'
    androidRuntime 'org.sqldroid:sqldroid:1.0.3'
    iosRuntime 'com.gluonhq:charm-ios:3.0.0'
    desktopRuntime 'com.gluonhq:charm-desktop:3.0.0'
    // desktopRuntime 'org.xerial:sqlite-jdbc:3.8.11.2'

    testCompile 'junit:junit:4.12'
    testCompile 'org.evosuite:evosuite-standalone-runtime:1.0.3'
    testCompile group: 'com.github.seratch', name: 'java-time-backport', version: '1.0.0'
    testCompile group: 'net.java.openjfx.backport', name: 'openjfx-78-backport', version: '1.8.0-ea-b96.1'

    testCompile group: 'org.mock-server', name: 'mockserver-core', version: '3.10.2'
    testCompile group: 'org.mock-server', name: 'mockserver-netty', version: '3.10.2'
    testCompile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.23.2'
}

jfxmobile {
    android {
        manifest = 'src/android/AndroidManifest.xml'
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
        }
    }
    ios {
        infoPList = file('src/ios/Default-Info.plist')
        forceLinkClasses = [
                'com.gluonhq.**.*',
                'io.datafx.**.*',
                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'SQLite.**.*',
                'org.javafxports.**.*',
                'org.glassfish.json.**.*'
        ]
    }
}

pmd {
    ignoreFailures = true
    ruleSets = ["java-basic",
                "java-braces",
                "java-naming",
                "java-codesize",
                "java-optimizations",
                "java-unusedcode",
                "java-design",
                "java-junit",
                "java-controversial"]
}

jacoco {
    toolVersion = "0.7.4+"
    reportsDir = file("$buildDir/jacocoReport")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
//    doFirst {
//        new File("$buildDir/classes/main/capstone/mobile").eachFileRecurse { file ->
//            if (file.name.contains('$$')) {
//                file.renameTo(file.path.replace('$$', '$'))
//            }
//        }
//    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            // fileTree(dir: it, excludes: ['gluonhq/**'])
            fileTree(dir: it, includes: [
                    'capstone/mobile/dataHandlers/**',
                    'capstone/mobile/models/**',
                    'capstone/mobile/other/**'
            ])
        })
    }
}

sourceSets {
    test {
        java {
            srcDirs = ["src/tests"]
        }
    }
}

retrolambda {

    jdk System.getenv("JAVA_HOME")
    if (System.getenv("JAVA7_HOME")) {
        oldJdk System.getenv("JAVA7_HOME")
    } else {
        oldJdk "/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home"
    }
}